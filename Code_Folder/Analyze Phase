#DESCRIPTIVE ANALYSIS
# Ride length
mean(all_trips_v2$ride_length) # Average ride length
median(all_trips_v2$ride_length) # Midpoint number in ascending array of ride lengths
max(all_trips_v2$ride_length) # longest ride
min(all_trips_v2$ride_length) # shortest ride
summary(all_trips_v2$ride_length)

#Compare members and casual users
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual, FUN = mean)
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual, FUN = median)
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual, FUN = max)
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual, FUN = min)

# See the average ride time by each day for members vs casual users
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)

# Ordering days of the week
all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

#Average time by each day for members vs casuals users
aggregate(all_trips_v2$ride_length~all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)

#Analyzing ridership data by type and weekday
all_trips_v2%>%
  mutate(weekday = wday(started_at, label = TRUE))%>%
  group_by(member_casual, weekday)%>%
  summarise( number_of_rides = n(),average_duration = mean(ride_length))%>%
  arrange(member_casual, weekday)

# Plotting number of rides by day of the week
all_trips_v2%>%
  mutate(weekday = wday(started_at, label = TRUE))%>%
  group_by(member_casual, weekday)%>%
  summarise( number_of_rides = n(),average_duration = mean(ride_length))%>%
  arrange(member_casual, weekday)%>%
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual))+ geom_col(position = "dodge")

#Plotting average duration by weekday for the two classes
all_trips_v2%>%
  mutate(weekday = wday(started_at, label = TRUE))%>%
  group_by(member_casual, weekday)%>%
  summarise( number_of_rides = n(),average_duration = mean(ride_length))%>%
  arrange(member_casual, weekday)%>%
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual))+ geom_col(position = "dodge")

# To find the top ten start stations for casual riders. Use the group_by (), arrange(desc) and filter() functions: 

all_trips_v2 %>% group_by(start_station_name) %>% 
  filter(member_casual == "casual") %>% 
  summarise(n = n()) %>% 
  arrange(desc(n)) %>%
  head(10)

# To find the top ten start stations for casual riders. Use the group_by (), arrange(desc) and filter() functions: 

all_trips_v2 %>% group_by(start_station_name) %>% 
  filter(member_casual == "member") %>% 
  summarise(n = n()) %>% 
  arrange(desc(n)) %>%
  head(10)
